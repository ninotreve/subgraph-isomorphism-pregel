Data graph path: /g-thinker/labelyou.txt
Query graph path: /g-thinker/query-fudan/randomQuery/q-10-15-4-1.txt
Input Format (1 for default, 0 for g-thinker): 0
Output graph path: /output
Order Method: degree
Optimization techniques: Pseudo-children Counting/

Loading data graph...
Loading data graph time : 7.767935 seconds
Preprocessing...
Preprocessing time : 1.517798 seconds
In total, offline time : 9.285893 seconds

Loading query graph...
Worker 0: "hdfs://master:9000/g-thinker/query-fudan/randomQuery/q-10-15-4-1.txt" loaded
Loading query graph time : 0.430477 seconds
Filtering...
Filtering time : 0.000000 seconds
Building query tree...
------- Print Query Graph ---------
# Query Vertices: 10
# Conflicts: 4
Max Branch Number: 3
Node 2: [Label: b Neighbors: [0, 1, 3, 5, 8] Level: 0 Branch number: 1 Children: [3] Backward neighbors: [] Backward neighbors positions: [] Backward same label positions: [] previous_mapping: [] chd_types: [0, 1] chd_constraint_self: [0] index_chain: [0]]. with 1 children and 1 pseudo children.
Node 3: [Label: d Neighbors: [2, 4, 5, 7] Level: 1 Branch number: 2 Children: [4, 5] Backward neighbors: [] Backward neighbors positions: [] Backward same label positions: [] previous_mapping: [2, -3] chd_types: [0, 0] chd_constraint_self: [1, 0] index_chain: [0, 0]]. with 2 children and 0 pseudo children.
Node 4: [Label: b Neighbors: [1, 3, 6, 7, 9] Level: 2 Branch number: 3 Children: [1] Backward neighbors: [] Backward neighbors positions: [] Backward same label positions: [0] previous_mapping: [2, 3, -4, -4] chd_types: [0, 1] chd_constraint_self: [1] index_chain: [0, 0, 0]]. with 1 children and 1 pseudo children.
Node 1: [Label: c Neighbors: [0, 2, 4] Level: 3 Branch number: 3 Children: [0] Backward neighbors: [2] Backward neighbors positions: [0] Backward same label positions: [] previous_mapping: [2, 3, 4, -5, -5] chd_types: [0] chd_constraint_self: [] index_chain: [0, 0, 0, 0]]. with 1 children and 0 pseudo children.
Node 0: [Label: d Neighbors: [1, 2, 9] Level: 4 Branch number: 3 Children: [9] Backward neighbors: [2] Backward neighbors positions: [0] Backward same label positions: [1] previous_mapping: [2, 3, 4, -5, -5, 1] chd_types: [0] chd_constraint_self: [] index_chain: [0, 0, 0, 1]]. with 1 children and 0 pseudo children.
Node 9: [Label: b Neighbors: [0, 4, 7] Level: 5 Branch number: 3 Children: [7] Backward neighbors: [4] Backward neighbors positions: [2] Backward same label positions: [0, 2] previous_mapping: [2, 3, 4, -5, -5, 1, 0] chd_types: [0] chd_constraint_self: [] index_chain: [0, 0, 0, 2]]. with 1 children and 0 pseudo children.
Node 7: [Label: a Neighbors: [3, 4, 9] Level: 6 Branch number: 3 Children: [] Backward neighbors: [3, 4] Backward neighbors positions: [1, 2] Backward same label positions: [] previous_mapping: [2, 3, 4, -5, -5, 1, 0, 9] chd_types: [] chd_constraint_self: [] index_chain: [0, 0, 0, 3]]. with 0 children and 0 pseudo children.
Node 6: [Label: c Neighbors: [4] Level: 3 Branch number: 3 Children: [] Backward neighbors: [] Backward neighbors positions: [] Backward same label positions: [] previous_mapping: [2, 3, -4, -4] chd_types: [] chd_constraint_self: [] index_chain: [0, 0, 1, 0]]. with 0 children and 0 pseudo children.
Node 5: [Label: d Neighbors: [2, 3] Level: 2 Branch number: 2 Children: [] Backward neighbors: [2] Backward neighbors positions: [0] Backward same label positions: [] previous_mapping: [2, -4, -4] chd_types: [] chd_constraint_self: [] index_chain: [0, 1, 0]]. with 0 children and 0 pseudo children.
Node 8: [Label: b Neighbors: [2] Level: 1 Branch number: 1 Children: [] Backward neighbors: [] Backward neighbors positions: [] Backward same label positions: [] previous_mapping: [] chd_types: [] chd_constraint_self: [] index_chain: [1, 0]]. with 0 children and 0 pseudo children.
------- Print Buckets ---------
level 0
[key] b [value] [2]
level 1
[key] d [value] [3]
[key] b [value] [8]
level 2
[key] b [value] [4]
[key] d [value] [5]
level 3
[key] c [value] [6, 1]
level 4
[key] d [value] [0]
level 5
[key] b [value] [9]
level 6
[key] a [value] [7]
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
------- Print Conflicts ---------
Conflict No. 0
u1: 5 u2: 0 u1_state: 5 ca: 3
index_chain_1: [1, 0]
index_chain_2: [0, 0, 1]
Conflict No. 1
u1: 6 u2: 1 u1_state: 6 ca: 4
index_chain_1: [1, 0]
index_chain_2: [0, 0]
Conflict No. 2
u1: 8 u2: 4 u1_state: 8 ca: 2
index_chain_1: [1, 0]
index_chain_2: [0, 0, 0]
Conflict No. 3
u1: 8 u2: 9 u1_state: 8 ca: 2
index_chain_1: [1, 0]
index_chain_2: [0, 0, 0, 2]
Building query tree time : 0.004451 seconds
**Subgraph matching**
[0] Superstep 1: #vertices computed: 1134890
Superstep 1 done.Time elapsed: 0.47776 seconds
#msgs: 10296, #vadd: 0
[0] Superstep 2: #vertices computed: 9921
Superstep 2 done.Time elapsed: 0.202177 seconds
#msgs: 15122, #vadd: 9013
[0] Superstep 3: #vertices computed: 21029
Superstep 3 done.Time elapsed: 1.06201 seconds
#msgs: 56142, #vadd: 177620
[0] Superstep 4: #vertices computed: 180214
Superstep 4 done.Time elapsed: 0.770284 seconds
#msgs: 415842, #vadd: 0
[0] Superstep 5: #vertices computed: 56825
Superstep 5 done.Time elapsed: 0.199316 seconds
#msgs: 257, #vadd: 0
[0] Superstep 6: #vertices computed: 1681
Superstep 6 done.Time elapsed: 0.080564 seconds
#msgs: 223, #vadd: 0
[0] Superstep 7: #vertices computed: 1366
Superstep 7 done.Time elapsed: 0.076169 seconds
#msgs: 0, #vadd: 0
Subgraph matching/enumeration done. 
Total Computational Time : 3.007918 seconds
 - Active Compute Time : 2.277468 seconds
 - Push back sent messages Time : 0.000001 seconds
 - Clear messages Time : 0.014080 seconds
 - Distribute messages Time : 0.429882 seconds
 - Stop criteria Time : 0.000062 seconds
 - Sync messages Time : 0.135381 seconds
 - Agg Time : 0.138793 seconds
 - Sync Time (load imbalance) : 0.000012 seconds
 - Communication Time : 0.000059 seconds
    - Serialization Time : 0.000002 seconds
    - Transfer Time : 0.000052 seconds
Total #msgs=497882, Total #vadd=186633
Subgraph matching time : 3.012354 seconds
[Detailed report]
1. Arrange messages: 0.145662 s
2. Main Computation: 0.589895 s
2.1. Loop through messages and check feasibility: 0.520522 s
2.1.1. For branch vertices: 0.107993 s
2.1.2. For leaf vertices: 0.0222781 s
2.1.3. For not-branch-nor-leaf vertices: 0.061249 s
2.2. Continue mapping: 0.0309305 s
2.2.1. Construct neighbor map: 0.00501728 s
2.2.2. Update out messages buffer: 0.0112588 s
**Subgraph enumeration**
[0] Superstep 1: #vertices computed: 1321523
Superstep 1 done.Time elapsed: 0.262734 seconds
#msgs: 1390, #vadd: 0
[0] Superstep 2: #vertices computed: 8601
Superstep 2 done.Time elapsed: 0.079186 seconds
#msgs: 1273, #vadd: 0
[0] Superstep 3: #vertices computed: 5734
Superstep 3 done.Time elapsed: 0.0759759 seconds
#msgs: 110, #vadd: 0
[0] Superstep 4: #vertices computed: 41
Superstep 4 done.Time elapsed: 0.0770659 seconds
#msgs: 0, #vadd: 0
Subgraph matching/enumeration done. 
Total Computational Time : 0.656784 seconds
 - Active Compute Time : 0.493338 seconds
 - Push back sent messages Time : 0.000001 seconds
 - Clear messages Time : 0.000001 seconds
 - Distribute messages Time : 0.001560 seconds
 - Stop criteria Time : 0.000020 seconds
 - Sync messages Time : 0.000005 seconds
 - Agg Time : 0.161399 seconds
 - Sync Time (load imbalance) : 0.000006 seconds
 - Communication Time : 0.000014 seconds
    - Serialization Time : 0.000004 seconds
    - Transfer Time : 0.000008 seconds
Total #msgs=2773, Total #vadd=0
Subgraph enumeration time : 0.656949 seconds
[Detailed report]
a) For leaf vertices: 0.00445628 s
b) For dummy vertices: 0.0107148 s
==build_branch==
1. Organize branches: 0.00223136 s
2. Enumerate trees: 0.00162649 s
3. Send to dummies or expand: 0.0094378 s
3.1. Send to dummies: 0.00219297 s
3.2. Expand: 0.00699377 s
Dumping results...
Dumping results time : 0.000000 seconds
In total, online time : 4.104719 seconds
================ Final Report ===============
Mapping count: 9825545
COMPUTE Time : 3.674201 seconds
